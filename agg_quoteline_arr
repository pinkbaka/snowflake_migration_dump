SELECT ID,SBQQ__PRIMARYQUOTE__C FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE TYPE = 'New Business'
and CLOSEDATE >= '1/1/2021'
and stagename = 'Closed Won';


//SBQQ__QUOTE__C, SBQQ__PRODUCTFAMILY__C 

SELECT * FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" where SBQQ__PRODUCTFAMILY__C is null;

SELECT MONTH(CLOSEDATE), OPPTY.TYPE, SBQQ__PRODUCTFAMILY__C,  SUM(QUOTE_LINE_NEW_ARR__C)
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C"    QL
LEFT JOIN   "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"    OPPTY
    on QL.SBQQ__QUOTE__C = OPPTY.SBQQ__PRIMARYQUOTE__C
WHERE TYPE = 'New Business'
                          and CLOSEDATE >= '1/1/2021'
                          and stagename = 'Closed Won'
             and Exclude_From_New__C = FALSE
             and Exclude_From_Arr_Calculation__C = FALSE
GROUP BY 1,2,3
ORDER by 3,1, SUM(QUOTE_LINE_NEW_ARR__C) desc;

CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1"
as
(
SELECT OPPTY.ID, TYPE, OPPTY.Name, CASE WHEN SBQQ__PRODUCTFAMILY__C is NULL then SBQQ__PRODUCTNAME__C else SBQQ__PRODUCTFAMILY__C end as Product--, SBQQ__SUBSCRIPTIONCATEGORY__C, SBQQ__PRODUCTCODE__C, QUOTE_LINE_PRODUCT_NAME__C
              --  ,Exclude_From_New__C
           --  ,Exclude_From_Arr_Calculation__C
  ,SUM(case when --Exclude_From_New__C = TRUE or 
       Exclude_From_Arr_Calculation__C = TRUE 
       or Growth_Quote_Line_ARR__c < 0
       then 0 else Growth_Quote_Line_ARR__c end) as PRODUCT_GROWTH_ARR
  ,SUM(EXPIRING_QUOTE_LINE_ARR__C) as EXPIRING_ARR
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C"    QL
LEFT JOIN   "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"    OPPTY
    on QL.SBQQ__QUOTE__C = OPPTY.SBQQ__PRIMARYQUOTE__C
WHERE  CLOSEDATE >= '1/1/2020'
                          and stagename = 'Closed Won'
              -- and Exclude_From_New__C = FALSE
             --and Exclude_From_Arr_Calculation__C = FALSE
             and OPPTY.TYPE in ('New Business','Renewal','Upsell')
             and product not in ('Services')
  --and TYPE = 'New Business'
                         
GROUP BY 1,2,3,4--,5,6--,7,8,9
ORDER by 3,1);

SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1";

CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1a"
as
(
  SELECT ID, TYPE, NAME, SUM(EXPIRING_ARR) as TTL_EXPIRING_QUOTE_LINE_ARR
  FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1"
  group by ID, TYPE, NAME
  );

SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1" where ID = '0065A00001YVxovQAD';
SELECT PRODUCT, count(*) FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1" group by 1;

CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp2"
as
(
    SELECT ID as OPP_ID, TYPE, NAME as OPP_NAME
            --      ,Exclude_From_New__C
            -- ,Exclude_From_Arr_Calculation__C
    ,"'Attribution'" as SNW_FIN_ARR_ATTRIBUTION
    ,"'Engagement'" as SNW_FIN_ARR_ENGAGEMENT
    ,"'Matching'" as SNW_FIN_ARR_MATCHING
    ,"'Router'" as SNW_FIN_ARR_ROUTING
    ,"'LD One Time Discount'" as SNW_ONE_TIME_DISCOUNT
    , case when SNW_FIN_ARR_ATTRIBUTION is null then 0 else 1 end +
        case when SNW_FIN_ARR_ENGAGEMENT is null then 0 else 1 end +
            case when SNW_FIN_ARR_MATCHING is null then 0 else 1 end +
                case when SNW_FIN_ARR_ROUTING is null then 0 else 1 end as CT_OF_PRODUCTS 
               -- ifnull(ABS(SNW_ONE_TIME_DISCOUNT)/CT_OF_PRODUCTS,0) as PER_PRODUCT_DISCOUNT


    --ifnull(SNW_NEW_ARR_ATTRIBUTION,0)+ ifnull(SNW_NEW_ARR_ENGAGEMENT,0)+ ifnull(SNW_NEW_ARR_MATCHING,0)+ifnull(SNW_NEW_ARR_ROUTING,0)
    FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1" 
        PIVOT(SUM(PRODUCT_GROWTH_ARR) for PRODUCT in ('Attribution', 'Engagement', 'Matching', 'Router', 'LD One Time Discount')) as p
); 
SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp2";
SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp2" where OPP_ID = '0065A00001bwfwIQAQ';

CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp3"
as
(
    SELECT 
    OPP_ID,
    TYPE,
    OPP_NAME,CT_OF_PRODUCTS, 
    SNW_FIN_ARR_ATTRIBUTION, 
    SNW_FIN_ARR_ENGAGEMENT,  
    SNW_FIN_ARR_MATCHING, 
    SNW_FIN_ARR_ROUTING,  
    ABS(SNW_ONE_TIME_DISCOUNT) as SNW_ONE_TIME_DISCOUNT,
    //case when SNW_NEW_ARR_ATTRIBUTION is null then 0 else SNW_NEW_ARR_ATTRIBUTION - PER_PRODUCT_DISCOUNT end as SNW_NEW_ARR_ATTRIBUTION_DSC_APPLIED_EQUAL,
    //case when SNW_NEW_ARR_ENGAGEMENT is null then 0 else SNW_NEW_ARR_ENGAGEMENT - PER_PRODUCT_DISCOUNT end as SNW_NEW_ARR_ENGAGEMENT_DSC_APPLIED_EQUAL,
    // case when SNW_NEW_ARR_MATCHING is null then 0 else SNW_NEW_ARR_MATCHING - PER_PRODUCT_DISCOUNT end as SNW_NEW_ARR_MATCHING_DSC_APPLIED_EQUAL,
    // case when SNW_NEW_ARR_ROUTING is null then 0 else SNW_NEW_ARR_ROUTING - PER_PRODUCT_DISCOUNT end as SNW_NEW_ARR_ROUTING_DSC_APPLIED_EQUAL,
    ifnull(SNW_FIN_ARR_ATTRIBUTION,0) + IFNULL(SNW_FIN_ARR_ENGAGEMENT,0) + ifnull(SNW_FIN_ARR_MATCHING,0) + ifnull(SNW_FIN_ARR_ROUTING,0) as SNW_TOTAL_PRODUCT_ARR,
    div0(ifnull(SNW_FIN_ARR_ATTRIBUTION,0),SNW_TOTAL_PRODUCT_ARR) as SNW_ATTRIBUTION_DSC_DISTRIBUTION,
    div0(ifnull(SNW_FIN_ARR_ENGAGEMENT,0),SNW_TOTAL_PRODUCT_ARR) as SNW_ENGAGEMENT_DSC_DISTRIBUTION,
    div0(ifnull(SNW_FIN_ARR_MATCHING,0),SNW_TOTAL_PRODUCT_ARR) as SNW_MATCHING_DSC_DISTRIBUTION,
    div0(ifnull(SNW_FIN_ARR_ROUTING,0),SNW_TOTAL_PRODUCT_ARR) as SNW_ROUTING_DSC_DISTRIBUTION

    FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp2"
  );
SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp3"
order by CT_OF_PRODUCTS desc; 

CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp4"
as
(
  SELECT *, 
      case when SNW_FIN_ARR_ATTRIBUTION is null then 0 else SNW_FIN_ARR_ATTRIBUTION - (ifnull(SNW_ONE_TIME_DISCOUNT,0) * ifnull(SNW_ATTRIBUTION_DSC_DISTRIBUTION,0)) end as SNW_FIN_ARR_ATTRIBUTION_DSC_APPLIED,
      case when SNW_FIN_ARR_ENGAGEMENT is null then 0 else SNW_FIN_ARR_ENGAGEMENT - (ifnull(SNW_ONE_TIME_DISCOUNT,0) * ifnull(SNW_ENGAGEMENT_DSC_DISTRIBUTION,0)) end as SNW_FIN_ARR_ENGAGEMENT_DSC_APPLIED,
       case when SNW_FIN_ARR_MATCHING is null then 0 else SNW_FIN_ARR_MATCHING - (ifnull(SNW_ONE_TIME_DISCOUNT,0) * ifnull(SNW_MATCHING_DSC_DISTRIBUTION,0)) end as SNW_FIN_ARR_MATCHING_DSC_APPLIED,
       case when SNW_FIN_ARR_ROUTING is null then 0 else SNW_FIN_ARR_ROUTING - (ifnull(SNW_ONE_TIME_DISCOUNT,0) * ifnull(SNW_ROUTING_DSC_DISTRIBUTION,0)) end as SNW_FIN_ARR_ROUTING_DSC_APPLIED
  FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp3"
  ); 


SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp4"
where CT_OF_PRODUCTS = 0; 

SELECT   * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp4"
order by CT_OF_PRODUCTS desc;


CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_RENEWALS_EXPIRING_ARR_DIFF"
as
(
    SELECT opp_id, 
  SBQQ__PRIMARYQUOTE__C,
  concat('https://leandata.my.salesforce.com/' , opp_id) as oppLink,
  concat('https://leandata.my.salesforce.com/' , SBQQ__PRIMARYQUOTE__C) as quoteLink,
  OPP_NAME, 
  t2.TYPE ,
  
  EXPIRING_ACV__C, TTL_EXPIRING_QUOTE_LINE_ARR,
  EXPIRING_ACV__C-TTL_EXPIRING_QUOTE_LINE_ARR as EXP_ARR_DELTA_NONABS,
    abs(EXPIRING_ACV__C-TTL_EXPIRING_QUOTE_LINE_ARR) as EXP_ARR_DELTA,
    case when EXP_ARR_DELTA > 10 then TRUE ELSE FALSE END as EXP_ARR_isDIFFERENT10,
  OPP_OWNERNAME__SNW,
  CURRENT_ACCTSEGMENT__SNW,
  
    closedate,
    NEW_ARR__C,Growth_Calculated__c, SNW_TOTAL_PRODUCT_ARR,
  Growth_Calculated__c - SNW_TOTAL_PRODUCT_ARR as GROWTH_ARR_DELTA_NONABS,
   abs(Growth_Calculated__c-SNW_TOTAL_PRODUCT_ARR) as GROWTH_ARR_DELTA,
  case when GROWTH_ARR_DELTA > 10 then TRUE ELSE FALSE END as GROWTH_ARR_isDIFFERENT10
  FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp4" t1 
    left join "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2 
    on t1.opp_id = t2.id
    left join "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp1a" t3
    on t2.id = t3.id
    where t2.type not in ('New Business', 'Upsell')
order by EXP_ARR_isDIFFERENT10 desc
  )
;

SELECT * 
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RENEWALS_EXPIRING_ARR_DIFF"
WHERE EXP_ARR_isDIFFERENT10 = TRUE
and GROWTH_CALCULATED__C >0
order by EXP_ARR_DELTA;


SELECT OPP_ID, SBQQ__PRIMARYQUOTE__C,OPPLINK, QUOTELINK, OPP_NAME, CLOSEDATE, EXP_ARR_DELTA--, GROWTH_ARR_DELTA
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RENEWALS_EXPIRING_ARR_DIFF"
WHERE 
( 
  EXP_ARR_isDIFFERENT10 = TRUE 
       
      or GROWTH_ARR_isDIFFERENT10 = TRUE)
and CLOSEDATE >= '1/1/2021'
and GROWTH_CALCULATED__C >0
group by OPP_ID, SBQQ__PRIMARYQUOTE__C,OPPLINK, QUOTELINK, OPP_NAME, CLOSEDATE,  EXP_ARR_DELTA--, GROWTH_ARR_DELTA
order by ifnull(EXP_ARR_DELTA,0) desc, EXP_ARR_DELTA desc;

--where opp_id = '0065A00001YX4ikQAD';

SELECT * FROM "PC_MATILLIONLOADER_DB"."PUBLIC"."TARGET_OPPORTUNITY" where id ='0066e00001co21z';

SELECT * FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" where name like '%Alation%';


CREATE OR REPLACE VIEW "TABLEAU_REPORTING"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_ARR_BREAKOUT"
as
(SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_OPPORTUNITY_PRODUCT_NEW_ARR_UNPIVOT_tmp4"
 );
 
 
 SELECT SBQQ__OriginalQuoteLineId__c FROM "PC_MATILLIONLOADER_DB"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" 
 where SBQQ__OriginalQuoteLineId__c is not null limit 1000;
 
 SELECT * FROM 
