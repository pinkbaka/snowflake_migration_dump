// NOTES
// Earliest Quoteline data only goes back to 2019-10-08 
//(select min(CREATEDDATE)  FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C";)
// Makes most sense to start using quoteline data from 2020 going forward (at best)

SELECT arr__C,EXPIRING_ACV__C, GROWTH_CALCULATED__C, NEW_ARR__C, QUOTE_ARR__C, SBQQ__PRIMARYQUOTE__C, * 
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE STAGENAME = 'Closed Won'
and Closedate between '3/1/2021' and '3/1/2021';




SELECT id,SBQQ__PRODUCTFAMILY__C,SBQQ__PRODUCTNAME__C,SBQQ__PRODUCTOPTION__C,
QUOTE_LINE_ARR__C
,EXCLUDE_FROM_ARR_CALCULATION__C
,EXCLUDE_FROM_NEW__C
,QUOTE_LINE_NEW_ARR__C
,EXPIRING_QUOTE_LINE_ARR__C
,GROWTH_QUOTE_LINE_ARR__C
,QUOTE_LINE_ARR_OVERRIDE__C
,SBQQ__CARRYOVERLINE__C


,* FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C"
where SBQQ__QUOTE__C in (SELECT SBQQ__PRIMARYQUOTE__C
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE STAGENAME = 'Closed Won'
and Closedate between '3/1/2021' and '3/1/2021')
and EXCLUDE_FROM_ARR_CALCULATION__C = FALSE;





SELECT id,SBQQ__PRODUCTFAMILY__C,SBQQ__PRODUCTNAME__C,SBQQ__PRODUCTOPTION__C,CREATEDDATE,
QUOTE_LINE_ARR__C
,EXCLUDE_FROM_ARR_CALCULATION__C
,EXCLUDE_FROM_NEW__C
,QUOTE_LINE_NEW_ARR__C
,EXPIRING_QUOTE_LINE_ARR__C
,GROWTH_QUOTE_LINE_ARR__C
,QUOTE_LINE_ARR_OVERRIDE__C
,SBQQ__CARRYOVERLINE__C


--,* 
  FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" 
where SBQQ__QUOTE__C in (SELECT SBQQ__PRIMARYQUOTE__C
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE STAGENAME = 'Closed Won'
and Closedate > '1/1/2021' )
and EXCLUDE_FROM_ARR_CALCULATION__C = FALSE
and (SBQQ__PRODUCTFAMILY__C = 'Attribution');


CREATE OR REPLACE TABLE "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR"
as
    (
   SELECT t2.NAME, t1.ID as QUOTE_ID,   QUOTE_LINE_ARR__C, EXPIRING_QUOTE_LINE_ARR__C, QUOTE_LINE_NEW_ARR__C, EXCLUDE_FROM_ARR_CALCULATION__C, EXCLUDE_FROM_NEW__C,
      t2.ID as OPPID, ARR__C, EXPIRING_ACV__C, NEW_ARR__C, SBQQ__QUOTE__C,
      t2.TYPE as OPP_TYPE,
      SUM(QUOTE_LINE_ARR__C) OVER (PARTITION BY t2.ID) as QL_ARR_TOTAL_AGG,
      SUM(EXPIRING_QUOTE_LINE_ARR__C) OVER (PARTITION BY t2.ID) as EXP_QL_ARR_TOTAL_AGG
   FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" t1
   LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2
   on t1.SBQQ__QUOTE__C = t2.SBQQ__PRIMARYQUOTE__C
   WHERE SBQQ__QUOTE__C in ( SELECT SBQQ__PRIMARYQUOTE__C
                            FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
                            WHERE STAGENAME = 'Closed Won'
                            and Closedate >= '1/1/2020'
                            and closedate <= '6/30/2021'
                            and TYPE in ('New Business','Upsell','Renewal'))
    );
    
    
//CREATE OR REPLACE TABLE "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_INCLUDED_ARR"
//as
//    (
//   SELECT t2.id as oppid, t2.name as opp_name, t2.type, t2.closedate, 
//      --EXCLUDE_FROM_ARR_CALCULATION__C,EXCLUDE_FROM_NEW__C,
//            t2.ARR__C, t2.NEW_ARR__C,      t2.EXPIRING_ACV__C, t2.EXPIRING_REVENUE__C,
//      t2.stagename,
//        t1.* 
//   FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR" t1
//   LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2
//   on t1.SBQQ__QUOTE__C = t2.SBQQ__PRIMARYQUOTE__C
//    );
   
SELECT * FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR";


CREATE OR REPLACE TABLE "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_AGG"
as
    (
      SELECT SUM(QUOTE_LINE_ARR__C) OVER (PARTITION BY OPPID) as QL_ARR_TOTAL_AGG,
             SUM(EXPIRING_QUOTE_LINE_ARR__C) OVER (PARTITION BY OPPID) as EXP_QL_ARR_TOTAL_AGG,
            * 
      FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR"
    );
    
    
SELECT * FROM  "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_AGG";
    
    
 CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."Quoteline_ExpiringARR_Reconcilation"
 as
 (
    SELECT OPPID, NAME, OPP_TYPE,EXP_QL_ARR_TOTAL_AGG,EXPIRING_ACV__C, delta
FROM 
(

SELECT EXCLUDE_FROM_ARR_CALCULATION__C as EXCLUDE_FROM_ARR, EXCLUDE_FROM_NEW__C as EXCLUDE_FROM_NEW, 
abs(EXP_QL_ARR_TOTAL_AGG - EXPIRING_ACV__C) as delta,
* FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR"
WHERE EXP_QL_ARR_TOTAL_AGG <>  EXPIRING_ACV__C

--and QUOTE_LINE_ARR__C is not null
--and SBQQ__PRODUCTNAME__C <> 'LD One Time Discount'
order by delta desc, oppid
 )
GROUP BY 1,2,3,4,5,6
order by delta desc);    
   
SELECT COUNT(DISTINCT OPPID)  FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_AGG"
WHERE EXP_QL_ARR_TOTAL_AGG <>  EXPIRING_ACV__C
--QL_ARR_TOTAL_AGG <>  ARR__C
--and QUOTE_LINE_ARR__C is not null
   
;   


SELECT EXCLUDE_FROM_ARR_CALCULATION__C as EXCLUDE_FROM_ARR, EXCLUDE_FROM_NEW__C as EXCLUDE_FROM_NEW,QUOTE_LINE_ARR__C, SBQQ__PRODUCTNAME__C, * FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_AGG"
WHERE QL_ARR_TOTAL_AGG <>  ARR__C
and QUOTE_LINE_ARR__C is not null
--and SBQQ__PRODUCTNAME__C <> 'LD One Time Discount'
order by oppid


SELECT COUNT(DISTINCT OPPID)  FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_AGG"
WHERE 
--QL_ARR_TOTAL_AGG <>  ARR__C
--and QUOTE_LINE_ARR__C is not null
;

SELECT COUNT(DISTINCT OPPID) FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_INCLUDED_ARR";
   
SELECT SBQQ__PRODUCTFAMILY__C as pfam,SBQQ__PRODUCTNAME__C as pname,SBQQ__PRODUCTOPTION__C as p_opt, QUOTE_LINE_ARR__C as ql_ARR ,
EXPIRING_QUOTE_LINE_ARR__C ql_exp_ARR,
* FROM     "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_INCLUDED_ARR"
WHERE SBQQ__PRODUCTFAMILY__C = 'Attribution'
 AND CLOSEDATE >= '1/1/2021'
and stagename = 'Closed Won'
AND QUOTE_LINE_ARR__C > 0
order by  month(CLOSEDATE) asc, type;

SELECT * FROM    "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE CLOSEDATE = '4/1/2021'
and stagename = 'Closed Won';

SELECT month(closedate), id as tmpid, 'opp' as obj, SUM(ARR__C), sum(NEW_ARR__C), sum(EXPIRING_ACV__C), sum(EXPIRING_REVENUE__C)   FROM  "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE CLOSEDATE > '4/20/2021'
and stagename = 'Closed Won'
and type = 'Renewal'
group by 1,2,3
union

SELECT month(closedate), oppid as tmpid ,'quoteline' as obj, SUM(QUOTE_LINE_ARR__C),  sum(case when EXCLUDE_FROM_NEW__C then 0 else QUOTE_LINE_NEW_ARR__C end), sum(EXPIRING_QUOTE_LINE_ARR__C),
sum(EXPIRING_QUOTE_LINE_ARR__C)FROM  "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_INCLUDED_ARR"
WHERE CLOSEDATE > '4/20/2021'
and EXCLUDE_FROM_ARR_CALCULATION__C = FALSE
and type = 'Renewal'
group by 1,2,3
order by 1,2;

    
   
SELECT opp_name, type, oppid,  ARR__C, QUOTE_LINE_ARR__C,
EXPIRING_ACV__C, EXPIRING_REVENUE__C, EXPIRING_QUOTE_LINE_ARR__C,  Expiring_Customer_Unit_Price__c, Expiring_Customer_Total__c

from "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE+OPP_INCLUDED_ARR"

where Closedate > '4/20/2021'
and oppid = '0065A00001Yok41QAB'
and (EXCLUDE_FROM_ARR_CALCULATION__C = FALSE or EXCLUDE_FROM_ARR_CALCULATION__C is null)
order by 1;
group by 1;
    
    
SELECT closedate, t1.id, t2.id as oppid, t2.name, t2.stagename, SBQQ__PRODUCTFAMILY__C,SBQQ__PRODUCTNAME__C,SBQQ__PRODUCTOPTION__C,t1.CREATEDDATE,
QUOTE_LINE_ARR__C
,EXCLUDE_FROM_ARR_CALCULATION__C
,EXCLUDE_FROM_NEW__C
,QUOTE_LINE_NEW_ARR__C
,EXPIRING_QUOTE_LINE_ARR__C
,GROWTH_QUOTE_LINE_ARR__C
,QUOTE_LINE_ARR_OVERRIDE__C
,SBQQ__CARRYOVERLINE__C
, t2.type, t2.stagename
FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE_INCLUDED_ARR" t1
left join "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2
on t1.SBQQ__QUOTE__C = t2.SBQQ__PRIMARYQUOTE__C
WHERE SBQQ__PRODUCTFAMILY__C is null
or SBQQ__PRODUCTFAMILY__C not in ('Matching','Router','Attribution', 'Engagement')
order by QUOTE_LINE_ARR__C asc
;
WHERE SBQQ__PRODUCTFAMILY__C = 'Attribution';





/// ADDITIONAL CONSIDERATIONS//
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


// outliers erroneous data 
// Product family is null (is this okay)
// Proudct family service with ARR
SELECT id,SBQQ__PRODUCTFAMILY__C,SBQQ__PRODUCTNAME__C,SBQQ__PRODUCTOPTION__C, CREATEDDATE,
QUOTE_LINE_ARR__C
,EXCLUDE_FROM_ARR_CALCULATION__C
,EXCLUDE_FROM_NEW__C
,QUOTE_LINE_NEW_ARR__C
,EXPIRING_QUOTE_LINE_ARR__C
,GROWTH_QUOTE_LINE_ARR__C
,QUOTE_LINE_ARR_OVERRIDE__C
,SBQQ__CARRYOVERLINE__C
,* FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C"
where SBQQ__QUOTE__C in (SELECT SBQQ__PRIMARYQUOTE__C
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE STAGENAME = 'Closed Won'
and Closedate between '1/1/2020' and '3/1/2021')
--and EXCLUDE_FROM_ARR_CALCULATION__C = FALSE
and (SBQQ__PRODUCTFAMILY__C = 'Services' or SBQQ__PRODUCTFAMILY__C is null)
and QUOTE_LINE_ARR__C > 0;



// Product on Opportunity is not filled out properly
// 5 opportunities where quote line has an attribution product but not the opp itself

SELECT * 
FROM
(
SELECT distinct oppid
FROM (SELECT t1.id, t2.id as oppid, t2.name, SBQQ__PRODUCTFAMILY__C,SBQQ__PRODUCTNAME__C,SBQQ__PRODUCTOPTION__C,t1.CREATEDDATE,
QUOTE_LINE_ARR__C
,EXCLUDE_FROM_ARR_CALCULATION__C
,EXCLUDE_FROM_NEW__C
,QUOTE_LINE_NEW_ARR__C
,EXPIRING_QUOTE_LINE_ARR__C
,GROWTH_QUOTE_LINE_ARR__C
,QUOTE_LINE_ARR_OVERRIDE__C
,SBQQ__CARRYOVERLINE__C
, t2.type, t2.stagename
FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE_INCLUDED_ARR" t1
left join "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2
on t1.SBQQ__QUOTE__C = t2.SBQQ__PRIMARYQUOTE__C
WHERE SBQQ__PRODUCTFAMILY__C = 'Attribution')) b1
left join (

SELECT DISTINCT ID
FROM"MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE ATTRIBUTION__C   and Closedate >= '1/1/2020'
and stagename = 'Closed Won') b2
on b1.oppid = b2.id
where id is null
;



SELECT COUNT(DISTINCT oppid)
FROM (SELECT t1.id, t2.id as oppid, t2.name, SBQQ__PRODUCTFAMILY__C,SBQQ__PRODUCTNAME__C,SBQQ__PRODUCTOPTION__C,t1.CREATEDDATE,
QUOTE_LINE_ARR__C
,EXCLUDE_FROM_ARR_CALCULATION__C
,EXCLUDE_FROM_NEW__C
,QUOTE_LINE_NEW_ARR__C
,EXPIRING_QUOTE_LINE_ARR__C
,GROWTH_QUOTE_LINE_ARR__C
,QUOTE_LINE_ARR_OVERRIDE__C
,SBQQ__CARRYOVERLINE__C
, t2.type, t2.stagename
FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_PQ_CW_QUOTELINE_INCLUDED_ARR" t1
left join "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2
on t1.SBQQ__QUOTE__C = t2.SBQQ__PRIMARYQUOTE__C
WHERE SBQQ__PRODUCTFAMILY__C = 'Attribution');

SELECT COUNT(DISTINCT ID)
FROM"MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
WHERE ATTRIBUTION__C   and Closedate >= '1/1/2020'
and stagename = 'Closed Won';

// Find Quotelines with Attribution
SELECT OPPTY.ID, SBQQ__PRIMARYQUOTE__C, SBQQ__QUOTE__C, SBQQ__PRODUCTFAMILY__C, ATTRIBUTION__C, CLOSEDATE,  OPPTY.NAME, * 
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" OPPTY 
LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" QL
ON OPPTY.SBQQ__PRIMARYQUOTE__C = QL.SBQQ__QUOTE__C
WHERE SBQQ__PRODUCTFAMILY__C  like 'Attribution'
or ATTRIBUTION__C = TRUE;


// Find Distinct Renewal Opp ID's with Attribution
CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_ATTRIBUTION_RENEWAL_OPPS"
as
(
  SELECT DISTINCT ID 
  FROM
      (
        SELECT OPPTY.ID, SBQQ__PRIMARYQUOTE__C, SBQQ__QUOTE__C, SBQQ__PRODUCTFAMILY__C, ATTRIBUTION__C, CLOSEDATE,  OPPTY.NAME
        FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" OPPTY 
        LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" QL
        ON OPPTY.SBQQ__PRIMARYQUOTE__C = QL.SBQQ__QUOTE__C
        WHERE (SBQQ__PRODUCTFAMILY__C  like 'Attribution' or ATTRIBUTION__C = TRUE) AND OPPTY.TYPE = 'Renewal'
      )
);  


SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_ATTRIBUTION_RENEWAL_OPPS";

SELECT * 
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" OPPTY
WHERE TYPE = 'Renewal'
and ID not IN (SELECT ID FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_ATTRIBUTION_RENEWAL_OPPS")
and CLOSEDATE >= '1/1/2020'
and ISCLOSED = TRUE;



SELECT * 
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" OPPTY
WHERE TYPE = 'Upsell'
and ID not IN (SELECT ID FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_ATTRIBUTION_RENEWAL_OPPS")
and CLOSEDATE >= '1/1/2020'
and ISCLOSED = TRUE;

SELECT * 
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" OPPTY
WHERE TYPE = 'Renewal'
--and CLOSEDATE >= '4/1/2020'
--and ISCLOSED = TRUE
;

// Opportunities with Attribution on QL, but not on Opp
SELECT OPPTY.ID, SBQQ__PRIMARYQUOTE__C,  SBQQ__PRODUCTFAMILY__C, ATTRIBUTION__C, CLOSEDATE,  OPPTY.NAME
FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" OPPTY 
LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" QL
ON OPPTY.SBQQ__PRIMARYQUOTE__C = QL.SBQQ__QUOTE__C
WHERE SBQQ__PRODUCTFAMILY__C like 'Attribution'
and ATTRIBUTION__C = FALSE
limit 100;


///

CREATE OR REPLACE TABLE "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR"
as
    (
   SELECT t2.NAME, t1.ID as QUOTE_ID,   QUOTE_LINE_ARR__C, EXPIRING_QUOTE_LINE_ARR__C, QUOTE_LINE_NEW_ARR__C, EXCLUDE_FROM_ARR_CALCULATION__C, EXCLUDE_FROM_NEW__C,
      t2.ID as OPPID, ARR__C, EXPIRING_ACV__C, NEW_ARR__C, SBQQ__QUOTE__C,
      t2.TYPE as OPP_TYPE,
      SUM(QUOTE_LINE_ARR__C) OVER (PARTITION BY t2.ID) as QL_ARR_TOTAL_AGG,
      SUM(EXPIRING_QUOTE_LINE_ARR__C) OVER (PARTITION BY t2.ID) as EXP_QL_ARR_TOTAL_AGG
   FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_SBQQ__QUOTELINE__C" t1
   LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY" t2
   on t1.SBQQ__QUOTE__C = t2.SBQQ__PRIMARYQUOTE__C
   WHERE SBQQ__QUOTE__C in ( SELECT SBQQ__PRIMARYQUOTE__C
                            FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_OPPORTUNITY"
                            WHERE STAGENAME = 'Closed Won'
                            and Closedate >= '1/1/2020'
                            and closedate <= '6/30/2021'
                            and TYPE in ('New Business','Upsell','Renewal'))
    );
    
    

 CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."Quoteline_ExpiringARR_Reconcilation"
 as
 (
    SELECT OPPID, NAME, OPP_TYPE,EXP_QL_ARR_TOTAL_AGG,EXPIRING_ACV__C, delta
FROM 
(

SELECT EXCLUDE_FROM_ARR_CALCULATION__C as EXCLUDE_FROM_ARR, EXCLUDE_FROM_NEW__C as EXCLUDE_FROM_NEW, 
abs(EXP_QL_ARR_TOTAL_AGG - EXPIRING_ACV__C) as delta,
* FROM "MTL_LOAD_PRE"."PUBLIC"."SNW_CW_QUOTELINE_INCLUDED_ARR"
WHERE EXP_QL_ARR_TOTAL_AGG <>  EXPIRING_ACV__C

--and QUOTE_LINE_ARR__C is not null
--and SBQQ__PRODUCTNAME__C <> 'LD One Time Discount'
order by delta desc, oppid
 )
GROUP BY 1,2,3,4,5,6
order by delta desc);    

SELECT * FROM "MTL_LOAD_TEST"."PUBLIC"."Quoteline_ExpiringARR_Reconcilation";



