// Week range for reporting is from Sunday -> Saturday
// Data should be aggregated based on activity from Sunday -> Saturday where saturday is the report date 
// Example:
// How would we aggregate the value for Saturday (1/7)?
// Sat(1/7) = (Sun 1/1) + (Mon 1/2) + (Tues 1/3) + (Wed 1/4) + (Thur 1/5) + (Fri 1/6) + (Sat 1/7)

// Set the start of the week to Sunday
// Week function now returns sunday as week start date
use role SYSADMIN;

set rpt_enddate = (select previous_day( current_date, 'Saturday'));

SELECT $rpt_enddate; 

ALTER SESSION SET WEEK_START = 7;

CREATE OR REPLACE TABLE "MTL_LOAD_TEST"."PUBLIC"."SNW_RPT_RoutedRecords_tmp" AS
  (
    SELECT ACCOUNT_TYPE__C,
            ACCOUNT_ID_15_TO_18__C, 
            ACCOUNT_NAME__C, 
            EMPLOYEE_BAND__C,
            DATE__C, 
            DATE_TRUNC( 'WEEK', DATE__C ) imp_WeekStart,
            DATEADD(day, 6, DATE_TRUNC( 'WEEK', DATE__C )) RPT_AGG_Date,
            ACTIVE__C, sandbox__C,ACCOUNT__C,
            LEAD_ROUTED_RECORDS__C,
            CONTACT_ROUTED_RECORDS__C,
            ACCOUNT_ROUTED_RECORDS__C,
            OPPORTUNITY_ROUTED_RECORDS__C,
            CASE_ROUTED_RECORDS__C
    FROM "MTL_LOAD_PRE"."PUBLIC"."TARGET_CUSTOMER_ORGANIZATION__C" t1
    LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_CUSTOMER_USAGE_METRICS__C" t2
        on t1.ID = t2.CUSTOMER_ORGANIZATION__C
    LEFT JOIN "MTL_LOAD_PRE"."PUBLIC"."TARGET_ACCOUNT" t3
        on t1.ACCOUNT__C = t3.ID
    WHERE
      DATE__C >= '1/3/2021'  and DATE__C <=  $rpt_enddate--'5/1/2021'         --Date Range for Activity
      AND CONTAINS(t1.ACCOUNT_TYPE__C , 'Customer' )            --Currently a Customer
      AND NOT CONTAINS(t1.ACCOUNT_TYPE__C , 'Former Customer' ) --Not a former Customer
      and SANDBOX__C = FALSE                                    --Not a sandbox environment
      AND UPPER(t1.NAME) not like '%OVERLORD%%'                 --exclude test names and orgs
      AND UPPER(t1.NAME) not like '%DEV%'                       --""
      AND UPPER(t1.NAME) not like '%LEANDATA%%'                 --""
      AND UPPER(t1.NAME) not like '%QA%%'                       --""
      AND UPPER(t1.NAME) not like '%TEST%%'                     --""
      AND t1.ACTIVE__C = TRUE                                   --org is active
      AND IS_BLIND__C = FALSE                                   --org is not blind
  );

CREATE OR REPLACE VIEW "TABLEAU_REPORTING"."PUBLIC"."SNW_RPT_ROUTED_RECORDS" AS
  (
SELECT  DATE__C,imp_WeekStart, RPT_AGG_Date, ACCOUNT_ID_15_TO_18__C, ACCOUNT_NAME__C, EMPLOYEE_BAND__C,  
        'Lead' as Object, LEAD_ROUTED_RECORDS__C as routed_record
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RPT_RoutedRecords_tmp"
UNION 
SELECT  DATE__C,imp_WeekStart, RPT_AGG_Date, ACCOUNT_ID_15_TO_18__C, ACCOUNT_NAME__C, EMPLOYEE_BAND__C,  
        'Contact' as Object, CONTACT_ROUTED_RECORDS__C as routed_record
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RPT_RoutedRecords_tmp"
UNION
SELECT  DATE__C,imp_WeekStart, RPT_AGG_Date, ACCOUNT_ID_15_TO_18__C, ACCOUNT_NAME__C, EMPLOYEE_BAND__C,  
        'Account' as Object, ACCOUNT_ROUTED_RECORDS__C as routed_record
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RPT_RoutedRecords_tmp"
UNION
SELECT  DATE__C,imp_WeekStart, RPT_AGG_Date, ACCOUNT_ID_15_TO_18__C, ACCOUNT_NAME__C, EMPLOYEE_BAND__C,  
        'Opportunity' as Object, OPPORTUNITY_ROUTED_RECORDS__C as routed_record
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RPT_RoutedRecords_tmp"
UNION
SELECT  DATE__C,imp_WeekStart, RPT_AGG_Date, ACCOUNT_ID_15_TO_18__C, ACCOUNT_NAME__C, EMPLOYEE_BAND__C,  
        'Case' as Object, CASE_ROUTED_RECORDS__C as routed_record
FROM "MTL_LOAD_TEST"."PUBLIC"."SNW_RPT_RoutedRecords_tmp"
);

